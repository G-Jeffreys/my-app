rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isUser(userId) {
      return exists(/databases/$(database)/documents/users/$(userId));
    }

    function isFriend(userId, friendId) {
      return exists(/databases/$(database)/documents/users/$(userId)/friends/$(friendId));
    }

    // Users can read and write their own documents
    // Users can only be created if the user is authenticated
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;

      // Friend requests can be created by anyone, but can only be read by the sender or recipient.
      // Sender can delete their own request. Recipient can update status.
      match /friendRequests/{requestId} {
        allow create: if request.auth.uid == request.resource.data.from;
        allow read: if request.auth.uid == resource.data.from || request.auth.uid == resource.data.to;
        allow update: if request.auth.uid == resource.data.to;
        allow delete: if request.auth.uid == resource.data.from;
      }

      // Friends subcollection can only be read or written to by the parent user
      match /friends/{friendId} {
        allow read, write: if request.auth.uid == userId;
      }
      
      // Blocked users subcollection can only be read or written to by the parent user
      match /blockedUsers/{blockedId} {
          allow read, write: if request.auth.uid == userId;
      }
    }

    // Messages can be created by the sender, and read only by sender or recipient.
    match /messages/{messageId} {
      allow create: if request.auth.uid == request.resource.data.senderId;
      allow read: if request.auth.uid == resource.data.senderId || request.auth.uid == resource.data.recipientId;
      allow update: if request.auth.uid == resource.data.recipientId;
      allow delete: if false;
    }

    // Receipts can be created by the recipient.
    match /receipts/{receiptId} {
      allow create: if request.auth.uid == request.resource.data.userId &&
                       exists(/databases/$(database)/documents/messages/$(request.resource.data.messageId));
      allow read, update: if request.auth.uid == request.resource.data.userId;
      allow delete: if false;
    }
  }
} 